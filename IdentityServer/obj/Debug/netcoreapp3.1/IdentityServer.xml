<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdentityServer</name>
    </assembly>
    <members>
        <member name="M:IdentityServer.Authorizations.JwtTokenHandler.IssueJwt(IdentityServer.Authorizations.TokenModelJwt)">
            <summary>
            颁发token
            </summary>
            <param name="tokenModel"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.Authorizations.JwtTokenHandler.Serialize(System.String)">
            <summary>
            我颁发了token令牌，需要对应的去识别令牌
            </summary>
            <param name="jwt"></param>
            <returns></returns>
        </member>
        <member name="T:IdentityServer.Authorizations.TokenModelJwt">
            <summary>
            令牌实体
            </summary>
        </member>
        <member name="P:IdentityServer.Authorizations.TokenModelJwt.Uid">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IdentityServer.Authorizations.TokenModelJwt.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:IdentityServer.Authorizations.TokenModelJwt.Work">
            <summary>
            职能
            </summary>
        </member>
        <member name="P:IdentityServer.Authorizations.TokenModelJwt.ValidAudience">
            <summary>
            接收者
            </summary>
        </member>
        <member name="M:IdentityServer.Appsettings.app(System.String[])">
            <summary>
            封装要操作的字符
            </summary>
            <param name="sections">节点配置</param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.Appsettings.app``1(System.String[])">
            <summary>
            递归获取配置信息数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sections"></param>
            <returns></returns>
        </member>
        <member name="T:IdentityServer.UtilConvert">
            <summary>
            字符类型转换
            </summary>
        </member>
        <member name="M:IdentityServer.UtilConvert.ObjToInt(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.UtilConvert.ObjToInt(System.Object,System.Int32)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.UtilConvert.ObjToMoney(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.UtilConvert.ObjToMoney(System.Object,System.Double)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.UtilConvert.ObjToString(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.UtilConvert.IsNotEmptyOrNull(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.UtilConvert.ObjToString(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.UtilConvert.ObjToDecimal(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.UtilConvert.ObjToDecimal(System.Object,System.Decimal)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.UtilConvert.ObjToDate(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.UtilConvert.ObjToDate(System.Object,System.DateTime)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <param name="errorValue"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.UtilConvert.ObjToBool(System.Object)">
            <summary>
            
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer.UtilConvert.DateToTimeStamp(System.DateTime)">
            <summary>
            获取当前时间的时间戳
            </summary>
            <param name="thisValue"></param>
            <returns></returns>
        </member>
        <member name="T:IdentityServer.JwtTokenAuthMiddleware">
            <summary>
            中间件
            先做检查 header token的使用
            </summary>
        </member>
        <member name="F:IdentityServer.JwtTokenAuthMiddleware._next">
            <summary>
            
            </summary>
        </member>
        <member name="M:IdentityServer.JwtTokenAuthMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:IdentityServer.JwtTokenAuthMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:IdentityServerHost.Quickstart.UI.AccountController">
            <summary>
            This sample controller implements a typical login/logout/provision workflow for local and external accounts.
            The login service encapsulates the interactions with the user data store. This data store is in-memory only and cannot be used for production!
            The interaction service provides a way for the UI to communicate with identityserver for validation and context retrieval
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.AccountController.Login(System.String)">
            <summary>
            Entry point into the login workflow
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.AccountController.Login(IdentityServerHost.Quickstart.UI.LoginInputModel,System.String)">
            <summary>
            Handle postback from username/password login
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.AccountController.Logout(System.String)">
            <summary>
            Show logout page
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.AccountController.Logout(IdentityServerHost.Quickstart.UI.LogoutInputModel)">
            <summary>
            Handle logout page postback
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.ExternalController.Challenge(System.String,System.String)">
            <summary>
            initiate roundtrip to external authentication provider
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.ExternalController.Callback">
            <summary>
            Post processing of external authentication
            </summary>
        </member>
        <member name="T:IdentityServerHost.Quickstart.UI.ConsentController">
            <summary>
            This controller processes the consent UI
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.ConsentController.Index(System.String)">
            <summary>
            Shows the consent screen
            </summary>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.ConsentController.Index(IdentityServerHost.Quickstart.UI.ConsentInputModel)">
            <summary>
            Handles the consent screen postback
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.Extensions.IsNativeClient(IdentityServer4.Models.AuthorizationRequest)">
            <summary>
            Checks if the redirect URI is for a native client.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IdentityServerHost.Quickstart.UI.GrantsController">
            <summary>
            This sample controller allows a user to revoke grants given to clients
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.GrantsController.Index">
            <summary>
            Show list of grants
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.GrantsController.Revoke(System.String)">
            <summary>
            Handle postback to revoke a client
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.HomeController.Error(System.String)">
            <summary>
            Shows the error page
            </summary>
        </member>
    </members>
</doc>
